{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import Avatar from \"@mui/material/Avatar\";\n// import Button from \"@mui/material/Button\";\n// import CssBaseline from \"@mui/material/CssBaseline\";\n// import TextField from \"@mui/material/TextField\";\n// import Grid from \"@mui/material/Grid\";\n// import Box from \"@mui/material/Box\";\n// import Typography from \"@mui/material/Typography\";\n// import Container from \"@mui/material/Container\";\n// import { createTheme, ThemeProvider } from \"@mui/material/styles\";\n// import { PersonOutline } from \"@material-ui/icons\";\n// import useInput from \"./useInput\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { useUserDispatch, useUserState } from \"./UserContext\";\n// import { sendMypageReq, sendUpdateReq } from \"./UserApi\";\n// const theme2 = createTheme();\n// function MyPage() {\n//   const navigate = useNavigate();\n//   const dispatch = useUserDispatch();\n//   const { user } = useUserState();\n//   const { user_id } = useParams();\n//   const [id, onChangeId, setId] = useInput(\"\");\n//   const [pwd, onChangePwd, setPwd] = useInput(\"\");\n//   const [confirmPwd, onChangeConfirmPwd, setConfirmPwd] = useInput(\"\");\n//   const [user_name, onChangeName, setName] = useInput(\"\");\n//   const [user_mail, onChangeEmail, setEmail] = useInput(\"\");\n//   const [user_phone, onChangePhone, setPhone] = useInput(\"\");\n//   const [user_address1, onChangeAddr1, setAddr1] = useInput(\"\");\n//   const [user_address2, onChangeAddr2, setAddr2] = useInput(\"\");\n//   const [user_business, onChangeBusiness, setBusiness] = useInput(\"\");\n//   const [user_birth, onChangeBirth, setBrith] = useInput(\"\");\n//   const [user_birth, onChangeBirth, setBrith] = useInput(\"\");\n//   const [user_image1, onChangeImage1, setImage1] = useInput(\"\");\n//   const [user_image2, onChangeImage2, setImage2] = useInput(\"\");\n//   useEffect(() => {\n//     const MypageReq = async (user_id) => {\n//       const { info, result } = await sendMypageReq(user_id);\n//       console.log(info);\n//       if (result === \"success\") {\n//         setId(info.user_id);\n//         setName(info.user_name);\n//         setEmail(info.user_mail);\n//         setPhone(info.user_phone);\n//         setAddr1(info.user_address1);\n//         setAddr2(info.user_address2);\n//         setImage1(info.user_image1);\n//         setImage2(info.user_image2);\n//         setBrith(info.user_birth);\n//         setBusiness(info.user_business);\n//       } else {\n//         alert(\"서버 응답 에러\");\n//       }\n//     };\n//     if (user.user_id === user_id) {\n//       MypageReq(user_id);\n//     } else {\n//       alert(\"로그인한 아이디와 일치하지 않습니다.\");\n//     }\n//   }, []);\n//   const onModify = async (event) => {\n//     event.preventDefault();\n//     const data = new FormData(event.currentTarget);\n//     const res = await sendUpdateReq(data);\n//     console.log(\"[MyPage-onModify]\", res);\n//     if (res.result === \"success\") {\n//       alert(\"회원정보 업데이트가 완료되었습니다.\");\n//       dispatch({\n//         type: \"MODIFY\",\n//         // index: index,\n//         user_id: id,\n//         user_password: pwd,\n//       });\n//       navigate(`/mypage/${id}`);\n//     } else {\n//       alert(\"회원정보 업데이트 에러\");\n//     }\n//   };\n//   // 사진 미리보기\n//   const encodeFileToBase64_1 = (fileBlob) => {\n//     const reader = new FileReader();\n//     reader.readAsDataURL(fileBlob);\n//     return new Promise((resolve) => {\n//       reader.onload = () => {\n//         setImage1(reader.result);\n//         resolve();\n//       };\n//     });\n//   };\n//   const encodeFileToBase64_2 = (fileBlob) => {\n//     const reader = new FileReader();\n//     reader.readAsDataURL(fileBlob);\n//     return new Promise((resolve) => {\n//       reader.onload = () => {\n//         setImage2(reader.result);\n//         resolve();\n//       };\n//     });\n//   };\n//   return (\n//     <ThemeProvider theme={theme2}>\n//       <Container component=\"main\" maxWidth=\"xs\">\n//         <CssBaseline />\n//         <Box\n//           sx={{\n//             marginTop: 8,\n//             display: \"flex\",\n//             flexDirection: \"column\",\n//             alignItems: \"center\",\n//           }}\n//         >\n//           <Typography component=\"h1\" variant=\"h5\">\n//             마이페이지\n//           </Typography>\n//           <form name=\"myform\" encType=\"multipart/form-data\" onSubmit={onModify}>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 alignItems: \"center\",\n//                 justifyContent: \"center\",\n//                 flexDirection: \"column\",\n//                 marginBottom: \"20px\",\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   width: \"100px\",\n//                   height: \"100px\",\n//                   display: \"flex\",\n//                   alignItems: \"center\",\n//                   justifyContent: \"center\",\n//                   flexDirection: \"column\",\n//                 }}\n//               >\n//                 {user_image1 && (\n//                   <img\n//                     src={user_image1}\n//                     alt=\"preview-img\"\n//                     style={{ height: \"100px\", padding: \"10px\" }}\n//                   />\n//                 )}\n//                 {!user_image1 && (\n//                   <Avatar\n//                     sx={{\n//                       m: 1,\n//                       width: 56,\n//                       height: 56,\n//                     }}\n//                   >\n//                     <PersonOutline />\n//                   </Avatar>\n//                 )}\n//               </div>\n//               <div>\n//                 <Button variant=\"contained\" component=\"label\">\n//                   프로필사진 업로드\n//                   <input\n//                     id=\"file1\"\n//                     name=\"file1\"\n//                     type=\"file\"\n//                     accept=\"img/*\"\n//                     hidden\n//                     onChange={(e) => encodeFileToBase64_1(e.target.files[0])}\n//                   />\n//                 </Button>\n//               </div>\n//             </div>\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 alignItems: \"center\",\n//                 justifyContent: \"center\",\n//                 flexDirection: \"column\",\n//                 marginBottom: \"20px\",\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   width: \"100px\",\n//                   height: \"100px\",\n//                   display: \"flex\",\n//                   alignItems: \"center\",\n//                   justifyContent: \"center\",\n//                   flexDirection: \"column\",\n//                 }}\n//               >\n//                 {user_image2 && (\n//                   <img\n//                     src={user_image2}\n//                     alt=\"preview-img\"\n//                     style={{ height: \"100px\", padding: \"10px\" }}\n//                   />\n//                 )}\n//                 {!user_image2 && (\n//                   <Avatar\n//                     sx={{\n//                       m: 1,\n//                       width: 56,\n//                       height: 56,\n//                     }}\n//                   >\n//                     <PersonOutline />\n//                   </Avatar>\n//                 )}\n//               </div>\n//               <div>\n//                 <Button variant=\"contained\" component=\"label\">\n//                   배경사진 업로드\n//                   <input\n//                     id=\"file2\"\n//                     name=\"file2\"\n//                     type=\"file\"\n//                     accept=\"img/*\"\n//                     hidden\n//                     onChange={(e) => encodeFileToBase64_2(e.target.files[0])}\n//                   />\n//                 </Button>\n//               </div>\n//             </div>\n//             <Grid container spacing={2}>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   inputProps={{ readOnly: true }}\n//                   autoComplete=\"아이디\"\n//                   name=\"user_id\"\n//                   fullWidth\n//                   id=\"user_id\"\n//                   label=\"아이디\"\n//                   value={id}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_password\"\n//                   label=\"비밀번호\"\n//                   type=\"password\"\n//                   id=\"user_password\"\n//                   autoComplete=\"password\"\n//                   value={pwd}\n//                   onChange={onChangePwd}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   label=\"비밀번호 확인\"\n//                   type=\"password\"\n//                   autoComplete=\"cpassword\"\n//                   value={confirmPwd}\n//                   onChange={onChangeConfirmPwd}\n//                   error={confirmPwd === pwd ? false : true}\n//                 />\n//               </Grid>\n//               {confirmPwd === pwd ? (\n//                 <p></p>\n//               ) : (\n//                 <p>비밀번호가 일치하지 않습니다.</p>\n//               )}\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_name\"\n//                   label=\"이름\"\n//                   id=\"user_name\"\n//                   autoComplete=\"name\"\n//                   value={user_name}\n//                   onChange={onChangeName}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_birth\"\n//                   label=\"생년월일\"\n//                   id=\"user_birth\"\n//                   autoComplete=\"user_birth\"\n//                   value={user_birth}\n//                   onChange={onChangeBirth}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_mail\"\n//                   label=\"이메일\"\n//                   id=\"user_mail\"\n//                   autoComplete=\"email\"\n//                   value={user_mail}\n//                   onChange={onChangeEmail}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_phone\"\n//                   label=\"전화번호\"\n//                   id=\"user_phone\"\n//                   autoComplete=\"phone\"\n//                   value={user_phone}\n//                   onChange={onChangePhone}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_address1\"\n//                   label=\"주소1\"\n//                   id=\"user_address1\"\n//                   autoComplete=\"address1\"\n//                   value={user_address1}\n//                   onChange={onChangeAddr1}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_address2\"\n//                   label=\"주소2\"\n//                   id=\"user_address2\"\n//                   autoComplete=\"address2\"\n//                   value={user_address2}\n//                   onChange={onChangeAddr2}\n//                 />\n//               </Grid>\n//               <Grid item xs={12}>\n//                 <TextField\n//                   required\n//                   fullWidth\n//                   name=\"user_business\"\n//                   label=\"사업자등록번호\"\n//                   id=\"user_business\"\n//                   autoComplete=\"user_business\"\n//                   value={user_business}\n//                   onChange={onChangeBusiness}\n//                 />\n//               </Grid>\n//             </Grid>\n//             <Button\n//               type=\"submit\"\n//               fullWidth\n//               variant=\"contained\"\n//               sx={{ mt: 3, mb: 2 }}\n//             >\n//               수정\n//             </Button>\n//           </form>\n//         </Box>\n//       </Container>\n//     </ThemeProvider>\n//   );\n// }\n// export default MyPage;","map":{"version":3,"sources":["C:/java_full/Spring_boot/o9o9_frontend_0410/src/component/member/MyPage.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import Avatar from \"@mui/material/Avatar\";\r\n// import Button from \"@mui/material/Button\";\r\n// import CssBaseline from \"@mui/material/CssBaseline\";\r\n// import TextField from \"@mui/material/TextField\";\r\n// import Grid from \"@mui/material/Grid\";\r\n// import Box from \"@mui/material/Box\";\r\n// import Typography from \"@mui/material/Typography\";\r\n// import Container from \"@mui/material/Container\";\r\n// import { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\n// import { PersonOutline } from \"@material-ui/icons\";\r\n// import useInput from \"./useInput\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { useUserDispatch, useUserState } from \"./UserContext\";\r\n// import { sendMypageReq, sendUpdateReq } from \"./UserApi\";\r\n\r\n// const theme2 = createTheme();\r\n\r\n// function MyPage() {\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useUserDispatch();\r\n//   const { user } = useUserState();\r\n\r\n//   const { user_id } = useParams();\r\n\r\n//   const [id, onChangeId, setId] = useInput(\"\");\r\n//   const [pwd, onChangePwd, setPwd] = useInput(\"\");\r\n//   const [confirmPwd, onChangeConfirmPwd, setConfirmPwd] = useInput(\"\");\r\n \r\n//   const [user_name, onChangeName, setName] = useInput(\"\");\r\n//   const [user_mail, onChangeEmail, setEmail] = useInput(\"\");\r\n//   const [user_phone, onChangePhone, setPhone] = useInput(\"\");\r\n//   const [user_address1, onChangeAddr1, setAddr1] = useInput(\"\");\r\n//   const [user_address2, onChangeAddr2, setAddr2] = useInput(\"\");\r\n//   const [user_business, onChangeBusiness, setBusiness] = useInput(\"\");\r\n//   const [user_birth, onChangeBirth, setBrith] = useInput(\"\");\r\n//   const [user_birth, onChangeBirth, setBrith] = useInput(\"\");\r\n//   const [user_image1, onChangeImage1, setImage1] = useInput(\"\");\r\n//   const [user_image2, onChangeImage2, setImage2] = useInput(\"\");\r\n\r\n\r\n//   useEffect(() => {\r\n//     const MypageReq = async (user_id) => {\r\n//       const { info, result } = await sendMypageReq(user_id);\r\n\r\n//       console.log(info);\r\n\r\n//       if (result === \"success\") {\r\n//         setId(info.user_id);\r\n//         setName(info.user_name);\r\n//         setEmail(info.user_mail);\r\n//         setPhone(info.user_phone);\r\n//         setAddr1(info.user_address1);\r\n//         setAddr2(info.user_address2);\r\n//         setImage1(info.user_image1);\r\n//         setImage2(info.user_image2);\r\n//         setBrith(info.user_birth);\r\n//         setBusiness(info.user_business);\r\n//       } else {\r\n//         alert(\"서버 응답 에러\");\r\n//       }\r\n//     };\r\n\r\n//     if (user.user_id === user_id) {\r\n//       MypageReq(user_id);\r\n//     } else {\r\n//       alert(\"로그인한 아이디와 일치하지 않습니다.\");\r\n//     }\r\n//   }, []);\r\n\r\n//   const onModify = async (event) => {\r\n//     event.preventDefault();\r\n//     const data = new FormData(event.currentTarget);\r\n//     const res = await sendUpdateReq(data);\r\n\r\n//     console.log(\"[MyPage-onModify]\", res);\r\n//     if (res.result === \"success\") {\r\n//       alert(\"회원정보 업데이트가 완료되었습니다.\");\r\n\r\n//       dispatch({\r\n//         type: \"MODIFY\",\r\n//         // index: index,\r\n//         user_id: id,\r\n//         user_password: pwd,\r\n//       });\r\n\r\n//       navigate(`/mypage/${id}`);\r\n//     } else {\r\n//       alert(\"회원정보 업데이트 에러\");\r\n//     }\r\n//   };\r\n\r\n//   // 사진 미리보기\r\n//   const encodeFileToBase64_1 = (fileBlob) => {\r\n//     const reader = new FileReader();\r\n//     reader.readAsDataURL(fileBlob);\r\n//     return new Promise((resolve) => {\r\n//       reader.onload = () => {\r\n//         setImage1(reader.result);\r\n//         resolve();\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   const encodeFileToBase64_2 = (fileBlob) => {\r\n//     const reader = new FileReader();\r\n//     reader.readAsDataURL(fileBlob);\r\n//     return new Promise((resolve) => {\r\n//       reader.onload = () => {\r\n//         setImage2(reader.result);\r\n//         resolve();\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <ThemeProvider theme={theme2}>\r\n//       <Container component=\"main\" maxWidth=\"xs\">\r\n//         <CssBaseline />\r\n//         <Box\r\n//           sx={{\r\n//             marginTop: 8,\r\n//             display: \"flex\",\r\n//             flexDirection: \"column\",\r\n//             alignItems: \"center\",\r\n//           }}\r\n//         >\r\n//           <Typography component=\"h1\" variant=\"h5\">\r\n//             마이페이지\r\n//           </Typography>\r\n//           <form name=\"myform\" encType=\"multipart/form-data\" onSubmit={onModify}>\r\n//             <div\r\n//               style={{\r\n//                 display: \"flex\",\r\n//                 alignItems: \"center\",\r\n//                 justifyContent: \"center\",\r\n//                 flexDirection: \"column\",\r\n//                 marginBottom: \"20px\",\r\n//               }}\r\n//             >\r\n//               <div\r\n//                 style={{\r\n//                   width: \"100px\",\r\n//                   height: \"100px\",\r\n//                   display: \"flex\",\r\n//                   alignItems: \"center\",\r\n//                   justifyContent: \"center\",\r\n//                   flexDirection: \"column\",\r\n//                 }}\r\n//               >\r\n//                 {user_image1 && (\r\n//                   <img\r\n//                     src={user_image1}\r\n//                     alt=\"preview-img\"\r\n//                     style={{ height: \"100px\", padding: \"10px\" }}\r\n//                   />\r\n//                 )}\r\n//                 {!user_image1 && (\r\n//                   <Avatar\r\n//                     sx={{\r\n//                       m: 1,\r\n//                       width: 56,\r\n//                       height: 56,\r\n//                     }}\r\n//                   >\r\n//                     <PersonOutline />\r\n//                   </Avatar>\r\n//                 )}\r\n//               </div>\r\n//               <div>\r\n//                 <Button variant=\"contained\" component=\"label\">\r\n//                   프로필사진 업로드\r\n//                   <input\r\n//                     id=\"file1\"\r\n//                     name=\"file1\"\r\n//                     type=\"file\"\r\n//                     accept=\"img/*\"\r\n//                     hidden\r\n//                     onChange={(e) => encodeFileToBase64_1(e.target.files[0])}\r\n//                   />\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//             <div\r\n//               style={{\r\n//                 display: \"flex\",\r\n//                 alignItems: \"center\",\r\n//                 justifyContent: \"center\",\r\n//                 flexDirection: \"column\",\r\n//                 marginBottom: \"20px\",\r\n//               }}\r\n//             >\r\n//               <div\r\n//                 style={{\r\n//                   width: \"100px\",\r\n//                   height: \"100px\",\r\n//                   display: \"flex\",\r\n//                   alignItems: \"center\",\r\n//                   justifyContent: \"center\",\r\n//                   flexDirection: \"column\",\r\n//                 }}\r\n//               >\r\n//                 {user_image2 && (\r\n//                   <img\r\n//                     src={user_image2}\r\n//                     alt=\"preview-img\"\r\n//                     style={{ height: \"100px\", padding: \"10px\" }}\r\n//                   />\r\n//                 )}\r\n//                 {!user_image2 && (\r\n//                   <Avatar\r\n//                     sx={{\r\n//                       m: 1,\r\n//                       width: 56,\r\n//                       height: 56,\r\n//                     }}\r\n//                   >\r\n//                     <PersonOutline />\r\n//                   </Avatar>\r\n//                 )}\r\n//               </div>\r\n//               <div>\r\n//                 <Button variant=\"contained\" component=\"label\">\r\n//                   배경사진 업로드\r\n//                   <input\r\n//                     id=\"file2\"\r\n//                     name=\"file2\"\r\n//                     type=\"file\"\r\n//                     accept=\"img/*\"\r\n//                     hidden\r\n//                     onChange={(e) => encodeFileToBase64_2(e.target.files[0])}\r\n//                   />\r\n//                 </Button>\r\n//               </div>\r\n//             </div>\r\n//             <Grid container spacing={2}>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   inputProps={{ readOnly: true }}\r\n//                   autoComplete=\"아이디\"\r\n//                   name=\"user_id\"\r\n//                   fullWidth\r\n//                   id=\"user_id\"\r\n//                   label=\"아이디\"\r\n//                   value={id}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_password\"\r\n//                   label=\"비밀번호\"\r\n//                   type=\"password\"\r\n//                   id=\"user_password\"\r\n//                   autoComplete=\"password\"\r\n//                   value={pwd}\r\n//                   onChange={onChangePwd}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   label=\"비밀번호 확인\"\r\n//                   type=\"password\"\r\n//                   autoComplete=\"cpassword\"\r\n//                   value={confirmPwd}\r\n//                   onChange={onChangeConfirmPwd}\r\n//                   error={confirmPwd === pwd ? false : true}\r\n//                 />\r\n//               </Grid>\r\n//               {confirmPwd === pwd ? (\r\n//                 <p></p>\r\n//               ) : (\r\n//                 <p>비밀번호가 일치하지 않습니다.</p>\r\n//               )}\r\n             \r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_name\"\r\n//                   label=\"이름\"\r\n//                   id=\"user_name\"\r\n//                   autoComplete=\"name\"\r\n//                   value={user_name}\r\n//                   onChange={onChangeName}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_birth\"\r\n//                   label=\"생년월일\"\r\n//                   id=\"user_birth\"\r\n//                   autoComplete=\"user_birth\"\r\n//                   value={user_birth}\r\n//                   onChange={onChangeBirth}\r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_mail\"\r\n//                   label=\"이메일\"\r\n//                   id=\"user_mail\"\r\n//                   autoComplete=\"email\"\r\n//                   value={user_mail}\r\n//                   onChange={onChangeEmail}\r\n//                 />\r\n//               </Grid>\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_phone\"\r\n//                   label=\"전화번호\"\r\n//                   id=\"user_phone\"\r\n//                   autoComplete=\"phone\"\r\n//                   value={user_phone}\r\n//                   onChange={onChangePhone}\r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_address1\"\r\n//                   label=\"주소1\"\r\n//                   id=\"user_address1\"\r\n//                   autoComplete=\"address1\"\r\n//                   value={user_address1}\r\n//                   onChange={onChangeAddr1}\r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_address2\"\r\n//                   label=\"주소2\"\r\n//                   id=\"user_address2\"\r\n//                   autoComplete=\"address2\"\r\n//                   value={user_address2}\r\n//                   onChange={onChangeAddr2}\r\n//                 />\r\n//               </Grid>\r\n\r\n//               <Grid item xs={12}>\r\n//                 <TextField\r\n//                   required\r\n//                   fullWidth\r\n//                   name=\"user_business\"\r\n//                   label=\"사업자등록번호\"\r\n//                   id=\"user_business\"\r\n//                   autoComplete=\"user_business\"\r\n//                   value={user_business}\r\n//                   onChange={onChangeBusiness}\r\n//                 />\r\n//               </Grid>\r\n\r\n           \r\n//             </Grid>\r\n//             <Button\r\n//               type=\"submit\"\r\n//               fullWidth\r\n//               variant=\"contained\"\r\n//               sx={{ mt: 3, mb: 2 }}\r\n//             >\r\n//               수정\r\n//             </Button>\r\n//           </form>\r\n//         </Box>\r\n//       </Container>\r\n//     </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default MyPage;\r\n"]},"metadata":{},"sourceType":"module"}