{"ast":null,"code":"var _jsxFileName = \"C:\\\\java_full\\\\Spring_boot\\\\o9o9_frontend_0410\\\\src\\\\component\\\\member\\\\UserContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  userList: [],\n  user: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state,\n        user: {\n          user_id: action.user_id\n        }\n      };\n\n    case \"LOGOUT\":\n      return { ...state,\n        user: null\n      };\n\n    case \"MODIFY\":\n      return { ...state,\n        user: {\n          user_id: action.user_id\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst UserStateContext = /*#__PURE__*/createContext(null);\nconst UserDispatchContext = /*#__PURE__*/createContext(null);\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(UserStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(UserDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = UserProvider;\nexport const useUserState = () => {\n  _s2();\n\n  const state = useContext(UserStateContext);\n  if (!state) throw new Error(\"Cannot find UserProvider\");\n  return state;\n};\n\n_s2(useUserState, \"kdLImxeHm3898p7tqgy8Fclg5s8=\");\n\nexport const useUserDispatch = () => {\n  _s3();\n\n  const dispatch = useContext(UserDispatchContext);\n  if (!dispatch) throw new Error(\"Cannot find UserProvider\");\n  return dispatch;\n};\n\n_s3(useUserDispatch, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/java_full/Spring_boot/o9o9_frontend_0410/src/component/member/UserContext.js"],"names":["React","createContext","useContext","useReducer","initialState","userList","user","reducer","state","action","type","user_id","UserStateContext","UserDispatchContext","UserProvider","children","dispatch","useUserState","Error","useUserDispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,IAAI,EAAE;AACJK,UAAAA,OAAO,EAAEF,MAAM,CAACE;AADZ;AAFD,OAAP;;AAMF,SAAK,QAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,IAAI,EAAE;AAFD,OAAP;;AAIF,SAAK,QAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,IAAI,EAAE;AACJK,UAAAA,OAAO,EAAEF,MAAM,CAACE;AADZ;AAFD,OAAP;;AAMF;AACE,aAAOH,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,MAAMI,gBAAgB,gBAAGX,aAAa,CAAC,IAAD,CAAtC;AACA,MAAMY,mBAAmB,gBAAGZ,aAAa,CAAC,IAAD,CAAzC;AAEA,OAAO,MAAMa,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,UAAU,CAACI,OAAD,EAAUH,YAAV,CAApC;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEI,KAAlC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEQ,QAArC;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVM;;GAAMD,Y;;KAAAA,Y;AAYb,OAAO,MAAMG,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMT,KAAK,GAAGN,UAAU,CAACU,gBAAD,CAAxB;AACA,MAAI,CAACJ,KAAL,EAAY,MAAM,IAAIU,KAAJ,CAAU,0BAAV,CAAN;AACZ,SAAOV,KAAP;AACD,CAJM;;IAAMS,Y;;AAMb,OAAO,MAAME,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAMH,QAAQ,GAAGd,UAAU,CAACW,mBAAD,CAA3B;AACA,MAAI,CAACG,QAAL,EAAe,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACf,SAAOF,QAAP;AACD,CAJM;;IAAMG,e","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  userList: [],\r\n  user: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          user_id: action.user_id,\r\n        },\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    case \"MODIFY\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          user_id: action.user_id,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst UserStateContext = createContext(null);\r\nconst UserDispatchContext = createContext(null);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUserState = () => {\r\n  const state = useContext(UserStateContext);\r\n  if (!state) throw new Error(\"Cannot find UserProvider\");\r\n  return state;\r\n};\r\n\r\nexport const useUserDispatch = () => {\r\n  const dispatch = useContext(UserDispatchContext);\r\n  if (!dispatch) throw new Error(\"Cannot find UserProvider\");\r\n  return dispatch;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}